// Generated by view binder compiler. Do not edit!
package com.tetris.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tetris.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button achievementsButton;

  @NonNull
  public final LinearLayout buttonsContainer;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final TextView highScoreTextView;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final TextView playerNameTextView;

  @NonNull
  public final Button settingsButton;

  @NonNull
  public final Button startButton;

  @NonNull
  public final Button statisticsButton;

  @NonNull
  public final Button themesButton;

  @NonNull
  public final TextView versionTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button achievementsButton, @NonNull LinearLayout buttonsContainer,
      @NonNull Button continueButton, @NonNull TextView highScoreTextView,
      @NonNull ImageView logoImageView, @NonNull TextView playerNameTextView,
      @NonNull Button settingsButton, @NonNull Button startButton, @NonNull Button statisticsButton,
      @NonNull Button themesButton, @NonNull TextView versionTextView) {
    this.rootView = rootView;
    this.achievementsButton = achievementsButton;
    this.buttonsContainer = buttonsContainer;
    this.continueButton = continueButton;
    this.highScoreTextView = highScoreTextView;
    this.logoImageView = logoImageView;
    this.playerNameTextView = playerNameTextView;
    this.settingsButton = settingsButton;
    this.startButton = startButton;
    this.statisticsButton = statisticsButton;
    this.themesButton = themesButton;
    this.versionTextView = versionTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.achievementsButton;
      Button achievementsButton = ViewBindings.findChildViewById(rootView, id);
      if (achievementsButton == null) {
        break missingId;
      }

      id = R.id.buttonsContainer;
      LinearLayout buttonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonsContainer == null) {
        break missingId;
      }

      id = R.id.continueButton;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.highScoreTextView;
      TextView highScoreTextView = ViewBindings.findChildViewById(rootView, id);
      if (highScoreTextView == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.playerNameTextView;
      TextView playerNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (playerNameTextView == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      Button settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.startButton;
      Button startButton = ViewBindings.findChildViewById(rootView, id);
      if (startButton == null) {
        break missingId;
      }

      id = R.id.statisticsButton;
      Button statisticsButton = ViewBindings.findChildViewById(rootView, id);
      if (statisticsButton == null) {
        break missingId;
      }

      id = R.id.themesButton;
      Button themesButton = ViewBindings.findChildViewById(rootView, id);
      if (themesButton == null) {
        break missingId;
      }

      id = R.id.versionTextView;
      TextView versionTextView = ViewBindings.findChildViewById(rootView, id);
      if (versionTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, achievementsButton,
          buttonsContainer, continueButton, highScoreTextView, logoImageView, playerNameTextView,
          settingsButton, startButton, statisticsButton, themesButton, versionTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
