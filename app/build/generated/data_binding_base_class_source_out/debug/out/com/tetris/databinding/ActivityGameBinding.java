// Generated by view binder compiler. Do not edit!
package com.tetris.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tetris.R;
import com.tetris.game.GameView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView finalLevelTextView;

  @NonNull
  public final TextView finalLinesTextView;

  @NonNull
  public final TextView finalScoreTextView;

  @NonNull
  public final FrameLayout gameOverOverlay;

  @NonNull
  public final GameView gameView;

  @NonNull
  public final LinearLayout levelSection;

  @NonNull
  public final TextView levelTextView;

  @NonNull
  public final LinearLayout linesSection;

  @NonNull
  public final TextView linesTextView;

  @NonNull
  public final Button mainMenuButton;

  @NonNull
  public final ImageButton pauseButton;

  @NonNull
  public final FrameLayout pauseOverlay;

  @NonNull
  public final Button playAgainButton;

  @NonNull
  public final Button quitButton;

  @NonNull
  public final Button resumeButton;

  @NonNull
  public final LinearLayout scoreSection;

  @NonNull
  public final TextView scoreTextView;

  @NonNull
  public final LinearLayout timeSection;

  @NonNull
  public final TextView timeTextView;

  @NonNull
  public final ConstraintLayout topBar;

  @NonNull
  public final Button tutorialNextButton;

  @NonNull
  public final FrameLayout tutorialOverlay;

  @NonNull
  public final TextView tutorialTextView;

  private ActivityGameBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView finalLevelTextView, @NonNull TextView finalLinesTextView,
      @NonNull TextView finalScoreTextView, @NonNull FrameLayout gameOverOverlay,
      @NonNull GameView gameView, @NonNull LinearLayout levelSection,
      @NonNull TextView levelTextView, @NonNull LinearLayout linesSection,
      @NonNull TextView linesTextView, @NonNull Button mainMenuButton,
      @NonNull ImageButton pauseButton, @NonNull FrameLayout pauseOverlay,
      @NonNull Button playAgainButton, @NonNull Button quitButton, @NonNull Button resumeButton,
      @NonNull LinearLayout scoreSection, @NonNull TextView scoreTextView,
      @NonNull LinearLayout timeSection, @NonNull TextView timeTextView,
      @NonNull ConstraintLayout topBar, @NonNull Button tutorialNextButton,
      @NonNull FrameLayout tutorialOverlay, @NonNull TextView tutorialTextView) {
    this.rootView = rootView;
    this.finalLevelTextView = finalLevelTextView;
    this.finalLinesTextView = finalLinesTextView;
    this.finalScoreTextView = finalScoreTextView;
    this.gameOverOverlay = gameOverOverlay;
    this.gameView = gameView;
    this.levelSection = levelSection;
    this.levelTextView = levelTextView;
    this.linesSection = linesSection;
    this.linesTextView = linesTextView;
    this.mainMenuButton = mainMenuButton;
    this.pauseButton = pauseButton;
    this.pauseOverlay = pauseOverlay;
    this.playAgainButton = playAgainButton;
    this.quitButton = quitButton;
    this.resumeButton = resumeButton;
    this.scoreSection = scoreSection;
    this.scoreTextView = scoreTextView;
    this.timeSection = timeSection;
    this.timeTextView = timeTextView;
    this.topBar = topBar;
    this.tutorialNextButton = tutorialNextButton;
    this.tutorialOverlay = tutorialOverlay;
    this.tutorialTextView = tutorialTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.finalLevelTextView;
      TextView finalLevelTextView = ViewBindings.findChildViewById(rootView, id);
      if (finalLevelTextView == null) {
        break missingId;
      }

      id = R.id.finalLinesTextView;
      TextView finalLinesTextView = ViewBindings.findChildViewById(rootView, id);
      if (finalLinesTextView == null) {
        break missingId;
      }

      id = R.id.finalScoreTextView;
      TextView finalScoreTextView = ViewBindings.findChildViewById(rootView, id);
      if (finalScoreTextView == null) {
        break missingId;
      }

      id = R.id.gameOverOverlay;
      FrameLayout gameOverOverlay = ViewBindings.findChildViewById(rootView, id);
      if (gameOverOverlay == null) {
        break missingId;
      }

      id = R.id.gameView;
      GameView gameView = ViewBindings.findChildViewById(rootView, id);
      if (gameView == null) {
        break missingId;
      }

      id = R.id.levelSection;
      LinearLayout levelSection = ViewBindings.findChildViewById(rootView, id);
      if (levelSection == null) {
        break missingId;
      }

      id = R.id.levelTextView;
      TextView levelTextView = ViewBindings.findChildViewById(rootView, id);
      if (levelTextView == null) {
        break missingId;
      }

      id = R.id.linesSection;
      LinearLayout linesSection = ViewBindings.findChildViewById(rootView, id);
      if (linesSection == null) {
        break missingId;
      }

      id = R.id.linesTextView;
      TextView linesTextView = ViewBindings.findChildViewById(rootView, id);
      if (linesTextView == null) {
        break missingId;
      }

      id = R.id.mainMenuButton;
      Button mainMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (mainMenuButton == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      ImageButton pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.pauseOverlay;
      FrameLayout pauseOverlay = ViewBindings.findChildViewById(rootView, id);
      if (pauseOverlay == null) {
        break missingId;
      }

      id = R.id.playAgainButton;
      Button playAgainButton = ViewBindings.findChildViewById(rootView, id);
      if (playAgainButton == null) {
        break missingId;
      }

      id = R.id.quitButton;
      Button quitButton = ViewBindings.findChildViewById(rootView, id);
      if (quitButton == null) {
        break missingId;
      }

      id = R.id.resumeButton;
      Button resumeButton = ViewBindings.findChildViewById(rootView, id);
      if (resumeButton == null) {
        break missingId;
      }

      id = R.id.scoreSection;
      LinearLayout scoreSection = ViewBindings.findChildViewById(rootView, id);
      if (scoreSection == null) {
        break missingId;
      }

      id = R.id.scoreTextView;
      TextView scoreTextView = ViewBindings.findChildViewById(rootView, id);
      if (scoreTextView == null) {
        break missingId;
      }

      id = R.id.timeSection;
      LinearLayout timeSection = ViewBindings.findChildViewById(rootView, id);
      if (timeSection == null) {
        break missingId;
      }

      id = R.id.timeTextView;
      TextView timeTextView = ViewBindings.findChildViewById(rootView, id);
      if (timeTextView == null) {
        break missingId;
      }

      id = R.id.topBar;
      ConstraintLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.tutorialNextButton;
      Button tutorialNextButton = ViewBindings.findChildViewById(rootView, id);
      if (tutorialNextButton == null) {
        break missingId;
      }

      id = R.id.tutorialOverlay;
      FrameLayout tutorialOverlay = ViewBindings.findChildViewById(rootView, id);
      if (tutorialOverlay == null) {
        break missingId;
      }

      id = R.id.tutorialTextView;
      TextView tutorialTextView = ViewBindings.findChildViewById(rootView, id);
      if (tutorialTextView == null) {
        break missingId;
      }

      return new ActivityGameBinding((ConstraintLayout) rootView, finalLevelTextView,
          finalLinesTextView, finalScoreTextView, gameOverOverlay, gameView, levelSection,
          levelTextView, linesSection, linesTextView, mainMenuButton, pauseButton, pauseOverlay,
          playAgainButton, quitButton, resumeButton, scoreSection, scoreTextView, timeSection,
          timeTextView, topBar, tutorialNextButton, tutorialOverlay, tutorialTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
