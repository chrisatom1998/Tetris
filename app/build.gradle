
plugins {
    id("com.android.application") // Applied from project-level plugins block
    id("org.jetbrains.kotlin.android") // Applied from project-level plugins block
    id("kotlin-parcelize") // For Parcelable data classes
    // Apply other plugins declared in your project-level build.gradle as needed
    // e.g., id("com.google.dagger.hilt.android")
    // e.g., id("com.google.gms.google-services")
    id("com.google.devtools.ksp") // For annotation processors like Room
}

android {
    namespace = "com.tetris"
    compileSdk = 34 // Or your desired compile SDK version

    defaultConfig {
        applicationId = "com.tetris" // Usually same as namespace for apps
        minSdk = 24 // Or your desired minimum SDK version
        targetSdk = 34 // Usually same as compileSdk
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true // Enable code shrinking for release builds
            shrinkResources = true // Enable resource shrinking
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
        debug {
            minifyEnabled false
            applicationVariants.all { variant ->
                if (variant.buildType.name == "debug") {
                    variant.outputs.forEach { output ->
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose = false // Set to true if you are using Jetpack Compose
        viewBinding = true // Example: enable ViewBinding
        // dataBinding = true // Example: enable DataBinding
    }
    // If using Compose:
    // composeOptions {
    //     kotlinCompilerExtensionVersion = "YourComposeCompilerVersion" // e.g., "1.5.3" - must be compatible with Kotlin version
    // }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

dependencies {
    // Kotlin Standard Library & Coroutines
    //implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.22")
    // Updated to match project's Kotlin plugin version (1.9.22)
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")

    // AndroidX Core & AppCompat
    implementation("androidx.core:core-ktx:1.12.0") // Example
    implementation("androidx.appcompat:appcompat:1.6.1") // Example
    implementation("com.google.android.material:material:1.11.0") // Example
    implementation("androidx.constraintlayout:constraintlayout:2.1.4") // Example
    implementation("androidx.activity:activity-ktx:1.8.0") // Example
    implementation("androidx.fragment:fragment-ktx:1.6.2") // Example

    // Lifecycle (ViewModel, LiveData)
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0") // Example
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.7.0")

    // Room Database
    def room_version = "2.6.1"
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version") // For Kotlin Coroutines and Flow support
    ksp("androidx.room:room-compiler:$room_version")

    // Gson for JSON serialization (used by TypeConverters)
    implementation("com.google.code.gson:gson:2.10.1")
}